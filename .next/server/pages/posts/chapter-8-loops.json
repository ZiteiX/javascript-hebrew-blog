{"pageProps":{"post":{"content":"\n# לולאות\n\nאז בואו נגיד שיש לנו מערך של משתמשים, אותו אחד מהפרק הקודם.\n\n```js\nlet usersInMyApp = [\"David\", \"Sharon\", \"Rebeca\"];\n```\n\nכבר אמרנו שכמות המשתמשים משתנה!  \nאז כדי לדעת מה אורך המערך כרגע נשתמש\n**בפונקציה**\nבנויה ב\nJS\nלכל מערך יש אותה אז קבלו אותה:\n\n```js\nusersInMyApp.length;\n```\n\nlength - אורך באנגלית\nאז אם ננסה להדפיס את מה שהפעולה הזו\n**מחזירה**\nנראה שנקבל בדוגמא שלנו - 3.  \nמה הקאץ׳?  \nאם ננסה לגשת לאיבר במקום ה - 3 - נקבל שגיאה.  \nבמקרה הזה האיבר האחרון יהיה 2.  \nכי כמו שאמרנו האינדקס הראשון במערך מתחיל ב 0 ולא ב 1  \n:אז באותו עיקרון האינדקס האחרון של המערך יהיה\n\n```js\nusersInMyApp.length - 1;\n```\n\nטוב אז למה אני מדבר איתכם על מערכים כאשר הפרק עוסק בלולאות?  \nהאמת שרוב הפעמים שנשתמש בלולאות זה יהיה כדי לעשות פעולה כלשהי  \nעל מערך.  \nאז איך עושים את זה?  \nהכיר את for\n\n```js\nlet i;\nfor (i = 0; i < 5; i = i + 1) {\n  console.log(i);\n}\nconsole.log(\"Now i is: \", i);\n```\n\nנסו קודם להריץ את הקוד.\nמה קיבלנו?  \nבעצם ספרנו מ 0 ועד 4 בתוך הלולאה.  \nולאחר הלולאה, הדפסנו אינדקציה של ערכו של i  \n(שימו לב ל \" , \" שמפריד בין ה i לבין המחרוזת שכתבנו.)  \nוקיבלנו 5.  \nזו גם הסיבה שהלולאה נעצרה, נסביר בהמשך.\n\nאז בואו נדבר על ה -\n**for loop**  \nשימו לב קודם כל, שבתוך הסוגריים יש 3 חלקים שמופרדים באמצעות ( ; ).  \nלכל חלק יש תפקיד.\n\n1. החלק הראשון מבוצע אך ורק פעם אחת, בדרך כלל משמש כדי לאתחל משתנה שבו נשתמש כדי לרוץ כמות מסויימת על הלולאה.\n2. החלק השני מבוצע בכל פעם שמסתימת הלולאה\n   **וגם בפעם הראשונה שהקוד רץ**\n   ובעצם הוא התנאי לריצה של הלולאה.  \n   מגדיר עד מתי תרוץ הלולאה, במקרה שלנו, רק כאשר המשתנה\n   i\n   יגיע ל 5.\n\n3. רץ בכל פעם\n   **לאחר**\n   ריצת הלולאה. בדרך כלל משמש כדי לשנות את ערכו של המשתנה של הלולאה.\n   במקרה הזה, מקדם את המשתנה\n   i\n   באחד בכל סיום ריצת לולאה.\n\nלכל לולאה בדרך כלל יש משתנה, שמגדיר כמה פעמים הלולאה תרוץ.  \nבדרך כלל משתמשים באותיות:\n**i, j, k**\n\nבואו ננסה להדפיס את כל המשתמשים באפליקציה שלנו.  \nאז כדי לגשת למקום ספציפי במערך השתמשנו ב:\n\n```js\nusersInMyApp[0];\n```\n\nבדוגמא זו ניגשנו לאיבר הראשון.  \nמה נעשה כאשר נרצה לדוגמא להדפיס את כל האיברים במערך?\n\n```js\nlet usersInMyApp = [\"David\", \"Sharon\", \"Rebeca\"];\n\nfor (let i = 0; i < usersInMyApp.length; i++) {\n  console.log(usersInMyApp[i]);\n}\n```\n\nשימו לב שהפעם אתחלנו את המשתנה i\nבתוך החלק הראשון של הלולאה, בהמשך נלמד על ההבדל בין זה לדרך הקודמת.  \nאז בעצם בחלק השני של הלולאה, התנאי, אמרנו לקומפיילר לרוץ עד  \nשהאינדקס i\nיגיע לגודלו של המערך.  \nוככה בעצם רצים על מערך!  \nכדי לצבור עוד אינטואיציה, נסו לבצע עוד כמה לולאות עם הדפסות.\n\nאז כמו שהבנתם לולאות הם חלק מאוד חשוב בתכנות.  \nיש המון סוגים, שכל מטרתם הוא לעשות לנו את החיים קלים יותר!  \nאז הסוג השני של ה\n_for loop_\nנקרא\n_for of loop_\n\nעכשיו אנחנו נבצע בידיוק את אותו דבר כמו שעשינו, להדפיס את כל ערכי המערך.\n\n```js\nlet usersInMyApp = [\"David\", \"Sharon\", \"Rebeca\"];\n\nfor (user of usersInMyApp) {\n  console.log(user);\n}\n```\n\nזה בעצם ייתן לנו את אותו פלט, אך ללא הגדרה של משתני לולאה\n(i)\nובעצם משתנה הלולאה שלנו כרגע הוא\nuser\nשמייצג בכל איטרציה של הלולאה את ערך המערך בסדר עולה,  \nמהאינדקס\n**הראשון**\n-0  \nועד האינדקס\n**האחרון**\nכמו שלמדנו שהוא -\nusersInMyApp.length - 1\n","slug":"chapter-8-loops","author":"דוד אבן חיים","date":"2021-06-03","image":"chapter-8-loops.jpg","isFeatured":false,"summary":"","time":9,"title":"פרק 8: לולאות"},"nextPostSlug":"chapter-9-functions"},"__N_SSG":true}