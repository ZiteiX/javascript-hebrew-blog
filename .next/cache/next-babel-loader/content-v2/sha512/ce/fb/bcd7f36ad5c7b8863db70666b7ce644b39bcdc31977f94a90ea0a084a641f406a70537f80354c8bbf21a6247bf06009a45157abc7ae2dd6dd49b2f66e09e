{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/davidabenhaim/Desktop/myBlog-nextJS/components/posts/post-details/post-content.js\";\nimport Image from \"next/image\";\nimport Link from \"next/link\";\nimport ReactMarkdown from \"react-markdown\";\nimport PostHeader from \"./post-header\";\nimport { Prism } from \"react-syntax-highlighter\";\nimport { atomDark } from \"react-syntax-highlighter/dist/cjs/styles/prism\";\nimport classes from \"./post-content.module.css\";\nimport routes from \"../../routes\";\n\nfunction PostContent({\n  post,\n  nextPostSlug\n}) {\n  const nextPostPath = `${routes.POSTS}/${nextPostSlug}`;\n  const customComponents = {\n    p(paragraph) {\n      const {\n        node\n      } = paragraph;\n\n      if (node.children[0].tagName === \"img\") {\n        const image = node.children[0];\n        const imageSrc = `${routes.IMAGES}/${post.slug}/${image.properties.src}`;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.image,\n          children: /*#__PURE__*/_jsxDEV(Image, {\n            alt: image.alt,\n            src: imageSrc,\n            height: 300,\n            width: 300,\n            layout: \"responsive\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this);\n      } else if (node.children[0].tagName === \"a\") {\n        const {\n          properties,\n          children\n        } = node.children[0];\n        return /*#__PURE__*/_jsxDEV(Link, {\n          href: `${properties.href}/`,\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            target: \"_blank\",\n            children: children[0].value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: paragraph.children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 16\n        }, this);\n      }\n    },\n\n    code(code) {\n      const {\n        className,\n        children\n      } = code;\n      const language = className.split(\"-\")[1]; // ex: \"js\" for javascript\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Prism, {\n          language: language,\n          children: children,\n          style: atomDark\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this);\n    }\n\n  };\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    className: classes.content,\n    children: [/*#__PURE__*/_jsxDEV(PostHeader, {\n      title: post.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: [\"\\u05DB\\u05D5\\u05EA\\u05D1: \", post.author, \" || \\u05D6\\u05DE\\u05DF \\u05E7\\u05E8\\u05D9\\u05D0\\u05D4: \", post.time, \" \\u05D3\\u05E7\\u05D5\\u05EA\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n      components: customComponents,\n      children: post.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: nextPostSlug !== \"finished\" ? /*#__PURE__*/_jsxDEV(Link, {\n        href: nextPostPath,\n        children: \"\\u05D4\\u05DE\\u05E9\\u05DA \\u05DC\\u05E4\\u05D5\\u05E1\\u05D8 \\u05D4\\u05D1\\u05D0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \":( \\u05DB\\u05E8\\u05D2\\u05E2, \\u05D0\\u05D9\\u05DF \\u05E2\\u05D5\\u05D3 \\u05E4\\u05D5\\u05E1\\u05D8\\u05D9\\u05DD \\u05D1\\u05E0\\u05D5\\u05E9\\u05D0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\nexport default PostContent;","map":{"version":3,"sources":["/Users/davidabenhaim/Desktop/myBlog-nextJS/components/posts/post-details/post-content.js"],"names":["Image","Link","ReactMarkdown","PostHeader","Prism","atomDark","classes","routes","PostContent","post","nextPostSlug","nextPostPath","POSTS","customComponents","p","paragraph","node","children","tagName","image","imageSrc","IMAGES","slug","properties","src","alt","href","value","code","className","language","split","content","title","author","time"],"mappings":"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","sourcesContent":["import Image from \"next/image\";\nimport Link from \"next/link\";\nimport ReactMarkdown from \"react-markdown\";\nimport PostHeader from \"./post-header\";\nimport { Prism } from \"react-syntax-highlighter\";\nimport { atomDark } from \"react-syntax-highlighter/dist/cjs/styles/prism\";\n\nimport classes from \"./post-content.module.css\";\nimport routes from \"../../routes\";\n\nfunction PostContent({ post, nextPostSlug }) {\n  const nextPostPath = `${routes.POSTS}/${nextPostSlug}`;\n\n  const customComponents = {\n    p(paragraph) {\n      const { node } = paragraph;\n      if (node.children[0].tagName === \"img\") {\n        const image = node.children[0];\n        const imageSrc = `${routes.IMAGES}/${post.slug}/${image.properties.src}`;\n        return (\n          <div className={classes.image}>\n            <Image\n              alt={image.alt}\n              src={imageSrc}\n              height={300}\n              width={300}\n              layout=\"responsive\"\n            />\n          </div>\n        );\n      } else if (node.children[0].tagName === \"a\") {\n        const { properties, children } = node.children[0];\n        return (\n          <Link href={`${properties.href}/`}>\n            <a target=\"_blank\">{children[0].value}</a>\n          </Link>\n        );\n      } else {\n        return <p>{paragraph.children}</p>;\n      }\n    },\n    code(code) {\n      const { className, children } = code;\n      const language = className.split(\"-\")[1]; // ex: \"js\" for javascript\n\n      return (\n        <div>\n          <Prism language={language} children={children} style={atomDark} />\n        </div>\n      );\n    },\n  };\n\n  return (\n    <article className={classes.content}>\n      <PostHeader title={post.title} />\n      <h5>\n        כותב: {post.author} || זמן קריאה: {post.time} דקות\n      </h5>\n      <ReactMarkdown components={customComponents}>\n        {post.content}\n      </ReactMarkdown>\n      <div>\n        {nextPostSlug !== \"finished\" ? (\n          <Link href={nextPostPath}>המשך לפוסט הבא</Link>\n        ) : (\n          <h5>:( כרגע, אין עוד פוסטים בנושא</h5>\n        )}\n      </div>\n    </article>\n  );\n}\n\nexport default PostContent;\n"]},"metadata":{},"sourceType":"module"}