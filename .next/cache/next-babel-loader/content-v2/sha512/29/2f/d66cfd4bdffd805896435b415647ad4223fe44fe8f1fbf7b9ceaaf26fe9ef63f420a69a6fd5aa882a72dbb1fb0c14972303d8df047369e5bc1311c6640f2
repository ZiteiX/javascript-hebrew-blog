{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/davidabenhaim/Desktop/myBlog-nextJS/components/posts/post-details/post-content.js\";\nimport Image from \"next/image\";\nimport Link from \"next/link\";\nimport ReactMarkdown from \"react-markdown\";\nimport PostHeader from \"./post-header\";\nimport { Prism } from \"react-syntax-highlighter\";\nimport { atomDark } from \"react-syntax-highlighter/dist/cjs/styles/prism\";\nimport classes from \"./post-content.module.css\";\nimport routes from \"../../routes\";\n\nfunction PostContent({\n  post,\n  nextPostSlug\n}) {\n  const imagePath = `${routes.IMAGES}/${post.slug}/${post.image}`;\n  const nextPostPath = `${routes.POSTS}/${nextPostSlug}`;\n  const customComponents = {\n    p(paragraph) {\n      const {\n        node\n      } = paragraph;\n      console.log(node.children[0].tagName);\n\n      if (node.children[0].tagName === \"img\") {\n        const image = node.children[0];\n        const imageSrc = `${routes.IMAGES}/${post.slug}/${image.properties.src}`;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.image,\n          children: /*#__PURE__*/_jsxDEV(Image, {\n            alt: image.alt,\n            src: imageSrc,\n            height: 300,\n            width: 300,\n            layout: \"responsive\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: paragraph.children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 16\n        }, this);\n      }\n    },\n\n    code(code) {\n      const {\n        className,\n        children\n      } = code;\n      const language = className.split(\"-\")[1]; // ex: \"js\" for javascript\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Prism, {\n          language: language,\n          children: children,\n          style: atomDark\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this);\n    }\n\n  };\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    className: classes.content,\n    children: [/*#__PURE__*/_jsxDEV(PostHeader, {\n      title: post.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: [\"\\u05DB\\u05D5\\u05EA\\u05D1: \", post.author, \" || \\u05D6\\u05DE\\u05DF \\u05E7\\u05E8\\u05D9\\u05D0\\u05D4: \", post.time, \" \\u05D3\\u05E7\\u05D5\\u05EA\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n      components: customComponents,\n      children: post.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: nextPostSlug !== \"finished\" ? /*#__PURE__*/_jsxDEV(Link, {\n        href: nextPostPath,\n        children: \"\\u05D4\\u05DE\\u05E9\\u05DA \\u05DC\\u05E4\\u05D5\\u05E1\\u05D8 \\u05D4\\u05D1\\u05D0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \":( \\u05DB\\u05E8\\u05D2\\u05E2, \\u05D0\\u05D9\\u05DF \\u05E2\\u05D5\\u05D3 \\u05E4\\u05D5\\u05E1\\u05D8\\u05D9\\u05DD \\u05D1\\u05E0\\u05D5\\u05E9\\u05D0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\nexport default PostContent;","map":{"version":3,"sources":["/Users/davidabenhaim/Desktop/myBlog-nextJS/components/posts/post-details/post-content.js"],"names":["Image","Link","ReactMarkdown","PostHeader","Prism","atomDark","classes","routes","PostContent","post","nextPostSlug","imagePath","IMAGES","slug","image","nextPostPath","POSTS","customComponents","p","paragraph","node","console","log","children","tagName","imageSrc","properties","src","alt","code","className","language","split","content","title","author","time"],"mappings":"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","sourcesContent":["import Image from \"next/image\";\nimport Link from \"next/link\";\nimport ReactMarkdown from \"react-markdown\";\nimport PostHeader from \"./post-header\";\nimport { Prism } from \"react-syntax-highlighter\";\nimport { atomDark } from \"react-syntax-highlighter/dist/cjs/styles/prism\";\n\nimport classes from \"./post-content.module.css\";\nimport routes from \"../../routes\";\n\nfunction PostContent({ post, nextPostSlug }) {\n  const imagePath = `${routes.IMAGES}/${post.slug}/${post.image}`;\n  const nextPostPath = `${routes.POSTS}/${nextPostSlug}`;\n\n  const customComponents = {\n    p(paragraph) {\n      const { node } = paragraph;\n      console.log(node.children[0].tagName);\n      if (node.children[0].tagName === \"img\") {\n        const image = node.children[0];\n        const imageSrc = `${routes.IMAGES}/${post.slug}/${image.properties.src}`;\n\n        return (\n          <div className={classes.image}>\n            <Image\n              alt={image.alt}\n              src={imageSrc}\n              height={300}\n              width={300}\n              layout=\"responsive\"\n            />\n          </div>\n        );\n      } else {\n        return <p>{paragraph.children}</p>;\n      }\n    },\n    code(code) {\n      const { className, children } = code;\n      const language = className.split(\"-\")[1]; // ex: \"js\" for javascript\n\n      return (\n        <div>\n          <Prism language={language} children={children} style={atomDark} />\n        </div>\n      );\n    },\n  };\n\n  return (\n    <article className={classes.content}>\n      <PostHeader title={post.title} />\n      <h5>\n        כותב: {post.author} || זמן קריאה: {post.time} דקות\n      </h5>\n      <ReactMarkdown components={customComponents}>\n        {post.content}\n      </ReactMarkdown>\n      <div>\n        {nextPostSlug !== \"finished\" ? (\n          <Link href={nextPostPath}>המשך לפוסט הבא</Link>\n        ) : (\n          <h5>:( כרגע, אין עוד פוסטים בנושא</h5>\n        )}\n      </div>\n    </article>\n  );\n}\n\nexport default PostContent;\n"]},"metadata":{},"sourceType":"module"}